/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package apia2;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static io.restassured.RestAssured.*;
import java.util.Date;
import java.util.List;
import java.text.SimpleDateFormat;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

class AppTest {


    @Test public void
    testCurrentDate() {
        // date
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(d);
        
        get("/date").then().body("date", equalTo(date));

        // day
        d = new Date();
        sdf = new SimpleDateFormat("yyyy-MM-dd");
        date = sdf.format(d);
        get("/day").then().body("day", equalTo(date.substring(8, 10)));

        // month
        d = new Date();
         sdf = new SimpleDateFormat("yyyy-MM-dd");
         date = sdf.format(d);
        get("/month").then().body("month", equalTo(date.substring(5, 7)));

        // year
         d = new Date();
         sdf = new SimpleDateFormat("yyyy-MM-dd");
         date = sdf.format(d);
        get("/year").then().body("year", equalTo(date.substring(0, 4)));
    }



    @Test public void
    testAddEventSuccess() {
        post("/addEvent/123-party-20221110-doctor").then().body("isSuccess", equalTo("true"));
        post("/addEvent/124-party-20221109-doctor").then().body("isSuccess", equalTo("true"));
    }

    @Test public void
    testAddEventFail() {
        // fail because input paramater does not contain date (wrong input format), assume that the paramater has
        // to contain all the param of events
        post("/addEvent/123-party-doctor").then().assertThat().body("isSuccess", equalTo("false"));
    }


    @Test public void
    testModifyEventSuccess() {
        put("/modifyEvent/123-newParty-20221109-doctor").then().assertThat().body("isSuccess", equalTo("true"));
    }


    @Test public void
    testModifyEventFail() {
        // fail because the eventID does not exist
        put("/modifyEvent/123333-newParty-doctor").then().assertThat().body("isSuccess", equalTo("false"));
    }

    @Test public void
    testGetEvent() {
        App.main(new String[]{});
        post("/addEvent/124-party-20221109-doctor");
        get("/getEvent/20221109").then().body("eventID", equalTo("124"));
    }

    @Test public void
    testDeleteEventSuccess() {
        delete("/delete/123").then().assertThat().body("isSuccess", equalTo("true"));
    }

    @Test public void
    testDeleteEventFail() {
        // fail because eventID is not integer
        delete("/delete/dddd").then().assertThat().body("isSuccess", equalTo("false"));
    }

    
}
