/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package apia2;
import static spark.Spark.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class App {

    public static void main(String[] args) {
        port(8080);
        List<Event> events = new ArrayList<>();
        get("/date", (req,res)->{
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(d);
            res.type("application/json");

            return "{\"date\":\"" + date + "\"}";
            // return date;
        }); 

        get("/day", (req,res)->{
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(d);

            res.type("application/json");
            return "{\"day\":\"" + date.substring(8, 10) + "\"}";
        }); 


        get("/month", (req,res)->{
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(d);
            res.type("application/json");
            return "{\"month\":\"" + date.substring(5, 7) + "\"}";
        }); 

        get("/year", (req,res)->{
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(d);
            res.type("application/json");
            return "{\"year\":\"" + date.substring(0, 4) + "\"}";
        }); 

        post("/addEvent/:eventInfo", (req,res)->{
            String eventStr = req.params(":eventInfo");
            String isSuccess = "true";
            Event event = new Event();
            String[] param = eventStr.split("-");

            // param num not enough
            if(param.length < 4) {
                isSuccess = "false";
            } else{
                event.setEventType(param[1]);
                event.setEventDate(param[2]);
                event.setOwner(param[3]);
                try {
                    event.setEventID(Integer.valueOf(param[0]));
                } catch (Exception e) {
                    // param number format not match
                    isSuccess = "false";
                }
            }

            if(isSuccess.equals("true")){
                events.add(event);
            }
            
            res.type("application/json");
            return "{\"isSuccess\":\"" + isSuccess + "\"}";
        }); 

        put("/modifyEvent/:eventInfo", (req,res)->{
            String eventStr = req.params(":eventInfo");
            String isSuccess = "true";
            String[] param = eventStr.split("-");

            // param num not enough
            if(param.length < 4) {
                isSuccess = "false";
            }else{
                for(Event e : events){
                    if(e.getEventID() == Integer.valueOf(param[0])){
                        e.setEventType(param[1]);
                        e.setEventDate(param[2]);
                        e.setOwner(param[3]);
                    }
                }
            }
            
            res.type("application/json");
            return "{\"isSuccess\":\"" + isSuccess + "\"}";
        }); 

        delete("/delete/:eventID", (req,res)->{
            String eventStr = req.params(":eventID");
            int eventID = 123;

            try {
                eventID = Integer.valueOf(eventStr);
            } catch (Exception e) {
                // not an integer
                res.type("application/json");
                return "{\"isSuccess\":\"" + "false" + "\"}";
            }
            String isSuccess = "true";
            Event toRemove = null;
            for(Event e : events){
                if(e.getEventID() == Integer.valueOf(eventStr)){
                    toRemove = e;
                }
            }
            if(toRemove == null) {
            }else {
                events.remove(toRemove);
            }
            
            res.type("application/json");
            return "{\"isSuccess\":\"" + isSuccess + "\"}";
        }); 

        get("/getEvent/:date", (req,res)->{
            String eventStr = req.params(":date");
            List<Event> list = new ArrayList();
            for(Event e : events){
                if(e.getEventDate().equals(eventStr)){
                    list.add(e);
                }
            }
            if(list.size() == 0) list.add(new Event());
            
            res.type("application/json");
            return "{\"eventID\":\"" + list.get(0).getEventID() + "\"}";
            
        }); 
    }
}
